package com.login_signup_screendesign_demo;


import android.app.DownloadManager;
import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.loopj.android.http.AsyncHttpClient;
import com.loopj.android.http.AsyncHttpResponseHandler;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Uint;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.crypto.RawTransaction;
import org.web3j.crypto.TransactionEncoder;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.Web3jFactory;
import org.web3j.protocol.core.Response;
import org.web3j.protocol.core.methods.request.Transaction;
import org.web3j.protocol.core.methods.response.Web3ClientVersion;
import org.web3j.protocol.http.HttpService ;
import org.web3j.utils.Numeric;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.net.HttpURLConnection;
import java.net.InetAddress;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.UnknownHostException;
import java.util.Arrays;
import java.util.Collections;
import java.util.concurrent.ExecutionException;

import cz.msebera.android.httpclient.Header;


/**
 * Created by DANG QUAN on 3/2/2018.
 */

public class MainWork_Fragment extends Fragment implements View.OnClickListener {
    private static View view;
    private static CheckBox a,b,c,d ;
    private static Button submit ;
    private static TextView mTextView ;
    public static final int NETWORK_ID_MAIN = 1;
    public static final int NETWORK_ID_ROPSTEN = 3;
    public static String infuraAccessToken = "OeZsMeqktJHllYIpzsYI";
    public static String infuraTestNetRopstenUrl = "https://ropsten.infura.io/" + infuraAccessToken;
    private static EditText edt;

   // private static WebView wb
    public static String apikey = "K7BEBSHYDRFJJ2J8NSPYNWHD1B7GGKVEKD" ;
    public MainWork_Fragment() {

    }
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        view = inflater.inflate(R.layout.main_work, container,
               false);
        //wb=(WebView) view.findViewById(R.id.web_view);
        //WebSettings webSettings=wb.getSettings();
        //webSettings.setJavaScriptEnabled(true);
        //wb.loadUrl("https://etherscan.io");
        initViews();
        setListeners();
        return view ;
    }
    private void initViews() {
        a = (CheckBox) view.findViewById(R.id.checkBox);
        b = (CheckBox) view.findViewById(R.id.checkBox2);
        c = (CheckBox) view.findViewById(R.id.checkBox3);
        d = (CheckBox) view.findViewById(R.id.checkBox4);
        submit = (Button) view.findViewById(R.id.button) ;
        mTextView =  (TextView) view.findViewById(R.id.text);
        edt = (EditText)  view.findViewById(R.id.edt) ;
    }
    private void setListeners() {
        submit.setOnClickListener(this);
    }

    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.button:
                //Web3j web3 = Web3jFactory.build(new HttpService(infuraTestNetRopstenUrl));
                //Type index = new Type(new Uint(BigInteger.ONE)) ;
                //Function function = new Function(
                       // "answer",  // function we're calling
                        //Arrays.asList(new),
                        //Collections.<TypeReference<?>>emptyList()
                        //);

                /*String encodedFunction = FunctionEncoder.encode(function) ;
                Transaction transaction = Transaction.createFunctionCallTransaction(
                        <from>, <gasPrice>, <gasLimit>, contractAddress, <funds>, encodedFunction);

                org.web3j.protocol.core.methods.response.EthSendTransaction transactionResponse =
                        null;
                try {
                    transactionResponse = web3.ethSendTransaction(transaction).sendAsync().get();
                } catch (InterruptedException e) {
                    e.printStackTrace();
                } catch (ExecutionException e) {
                    e.printStackTrace();
                }*/

                //String transactionHash = transactionResponse.getTransactionHash();

                Toast.makeText(getActivity(), "Submited.", Toast.LENGTH_SHORT)
                            .show();

                //String address = "0x6c68955f6FA0Af72393333B10e0a396f86be8898";
                RawTransaction rawTransaction  = RawTransaction.createEtherTransaction(
                        BigInteger.valueOf(1), BigInteger.valueOf(450000000), BigInteger.valueOf(2100000), "0x5d265e1665Bf8227bB3FB1882AC39a964c88685C", BigInteger.valueOf(200));
                RawTransaction rawTransaction1  = RawTransaction.createContractTransaction(
                        BigInteger.valueOf(3), BigInteger.valueOf(450000), BigInteger.valueOf(3100000), BigInteger.valueOf(0),"0x608060405234801561001057600080fd5b50612133806100206000396000f300608060405260043610610128576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461012d57806307b59d1d146101bd5780630feb10ff1461021457806312592560146102e55780631e16f68b146102fc578063368f34eb146104155780633e6da5d5146104a057806356d424061461053f5780635e478df1146105ac5780638f2839701461061157806395bf75fd14610654578063a4d66daf1461066b578063a6c807a914610696578063ae16476f146107c5578063b46bff89146108c8578063db88176f146108df578063de9951a61461090c578063dffc8b2e1461099f578063e451614114610a4e578063eeff590714610ae1578063f0a47f7814610c1a578063f851a44014610cdd575b600080fd5b34801561013957600080fd5b50610142610d34565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610182578082015181840152602081019050610167565b50505050905090810190601f1680156101af5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101c957600080fd5b506101fe600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d6d565b6040518082815260200191505060405180910390f35b34801561022057600080fd5b506102cb60048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610db9565b604051808215151515815260200191505060405180910390f35b3480156102f157600080fd5b506102fa610f21565b005b34801561030857600080fd5b5061032760048036038101908080359060200190929190505050610faf565b604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610371578082015181840152602081019050610356565b50505050905090810190601f16801561039e5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156103d75780820151818401526020810190506103bc565b50505050905090810190601f1680156104045780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561042157600080fd5b5061048660048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611118565b604051808215151515815260200191505060405180910390f35b3480156104ac57600080fd5b506104eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611120565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390f35b34801561054b57600080fd5b5061056a60048036038101908080359060200190929190505050611193565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105b857600080fd5b506105f7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111d1565b604051808215151515815260200191505060405180910390f35b34801561061d57600080fd5b50610652600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111d9565b005b34801561066057600080fd5b50610669611274565b005b34801561067757600080fd5b506106806112b7565b6040518082815260200191505060405180910390f35b3480156106a257600080fd5b506106d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112bd565b604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610721578082015181840152602081019050610706565b50505050905090810190601f16801561074e5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561078757808201518184015260208101905061076c565b50505050905090810190601f1680156107b45780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b3480156107d157600080fd5b506107da611417565b604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610824578082015181840152602081019050610809565b50505050905090810190601f1680156108515780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561088a57808201518184015260208101905061086f565b50505050905090810190601f1680156108b75780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b3480156108d457600080fd5b506108dd61155f565b005b3480156108eb57600080fd5b5061090a60048036038101908080359060200190929190505050611561565b005b34801561091857600080fd5b5061099d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506115e0565b005b3480156109ab57600080fd5b50610a4c600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611947565b005b348015610a5a57600080fd5b50610adf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190505050611ac8565b005b348015610aed57600080fd5b50610b2c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611bc2565b604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610b76578082015181840152602081019050610b5b565b50505050905090810190601f168015610ba35780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610bdc578082015181840152602081019050610bc1565b50505050905090810190601f168015610c095780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b348015610c2657600080fd5b50610c5b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d38565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610ca1578082015181840152602081019050610c86565b50505050905090810190601f168015610cce5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b348015610ce957600080fd5b50610cf2611df4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6040805190810160405280601e81526020017f416374697665204c6561726e696e6720537570706f72742053797374656d000081525081565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b600083600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555082600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190610e58929190611e1a565b5081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019080519060200190610eaf929190611e1a565b5060053390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600190509392505050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908054610f70929190611e9a565b507fb1586ba7bc71187028aa17a22101bf0a2d9811d898a94ccb62f41024b94e30266001604051808215151515815260200191505060405180910390a1565b600081815481101515610fbe57fe5b9060005260206000209060030201600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110705780601f1061104557610100808354040283529160200191611070565b820191906000526020600020905b81548152906001019060200180831161105357829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561110e5780601f106110e35761010080835404028352916020019161110e565b820191906000526020600020905b8154815290600101906020018083116110f157829003601f168201915b5050505050905083565b600092915050565b60066020528160005260406000208181548110151561113b57fe5b9060005260206000209060030201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b6005818154811015156111a257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600092915050565b3373ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156112715780600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b33600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60015481565b6004602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561136f5780601f106113445761010080835404028352916020019161136f565b820191906000526020600020905b81548152906001019060200180831161135257829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561140d5780601f106113e25761010080835404028352916020019161140d565b820191906000526020600020905b8154815290600101906020018083116113f057829003601f168201915b5050505050905083565b6008806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114b75780601f1061148c576101008083540402835291602001916114b7565b820191906000526020600020905b81548152906001019060200180831161149a57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115555780601f1061152a57610100808354040283529160200191611555565b820191906000526020600020905b81548152906001019060200180831161153857829003601f168201915b5050505050905083565b565b60008181548110151561157057fe5b9060005260206000209060030201600860008201548160000155600182018160010190805460018160011615610100020316600290046115b1929190611f4c565b50600282018160020190805460018160011615610100020316600290046115d9929190611f4c565b5090505050565b806040518082805190602001908083835b60208310151561161657805182526020820191506020810190506020830392506115f1565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561169357fe5b906000526020600020906003020160020160405180828054600181600116156101000203166002900480156116ff5780601f106116dd5761010080835404028352918201916116ff565b820191906000526020600020905b8154815290600101906020018083116116eb575b5050915050604051809103902060001916141561182e57600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206060604051908101604052808573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001600115158152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505050611942565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206060604051908101604052808573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001600015158152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055505050505b505050565b6000606060405190810160405280600080549050815260200184815260200183815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000015560208201518160010190805190602001906119bb929190611fd3565b5060408201518160020190805190602001906119d8929190611fd3565b505050507f4fc2c367b1022c82e95084d2c01f46a95d200a3dbade00bf6a6e5bd382fb7c6e600080549050836040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611a4a578082015181840152602081019050611a2f565b50505050905090810190601f168015611a775780820380516001836020036101000a031916815260200191505b50935050505060405180910390a17f2887cc1df72e37077156c2e4d697ef3fd8dc37e0a6395115f0467be891797ce66001600080549050036040518082815260200191505060405180910390a15050565b3373ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611bbd5780600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190611bbb929190611e1a565b505b505050565b600360205281600052604060002081815481101515611bdd57fe5b906000526020600020906003020160009150915050806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c905780601f10611c6557610100808354040283529160200191611c90565b820191906000526020600020905b815481529060010190602001808311611c7357829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d2e5780601f10611d0357610100808354040283529160200191611d2e565b820191906000526020600020905b815481529060010190602001808311611d1157829003601f168201915b5050505050905083565b6002602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611de45780601f10611db957610100808354040283529160200191611de4565b820191906000526020600020905b815481529060010190602001808311611dc757829003601f168201915b5050505050908060010154905082565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611e5b57805160ff1916838001178555611e89565b82800160010185558215611e89579182015b82811115611e88578251825591602001919060010190611e6d565b5b509050611e969190612053565b5090565b828054828255906000526020600020906003028101928215611f3b5760005260206000209160030282015b82811115611f3a5782826000820154816000015560018201816001019080546001816001161561010002031660029004611f00929190611f4c565b5060028201816002019080546001816001161561010002031660029004611f28929190611f4c565b50505091600301919060030190611ec5565b5b509050611f489190612078565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611f855780548555611fc2565b82800160010185558215611fc257600052602060002091601f016020900482015b82811115611fc1578254825591600101919060010190611fa6565b5b509050611fcf9190612053565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061201457805160ff1916838001178555612042565b82800160010185558215612042579182015b82811115612041578251825591602001919060010190612026565b5b50905061204f9190612053565b5090565b61207591905b80821115612071576000816000905550600101612059565b5090565b90565b6120bc91905b808211156120b85760008082016000905560018201600061209f91906120bf565b6002820160006120af91906120bf565b5060030161207e565b5090565b90565b50805460018160011615610100020316600290046000825580601f106120e55750612104565b601f0160209004906000526020600020908101906121039190612053565b5b505600a165627a7a72305820b4aef95919a481ea7a9be521e25109b516847d6a5cc6632a0f7701fe8ed44a5c0029");

                Credentials credentials = Credentials.create("0xbd85535e41c5c53bd43e6193f7dc572d7bc97cd34bee97c1ac08c1ea88bc5905") ;
                byte[] signedMessage = TransactionEncoder.signMessage(rawTransaction, credentials);
                String hexValue = Numeric.toHexString(signedMessage);
                edt.setText(hexValue) ;
                //mTextView.setText(hexValue);
                /*String url = "https://api-ropsten.etherscan.io/api?module=proxy&action=eth_sendRawTransaction&hex="+ hexValue +"&apikey=K7BEBSHYDRFJJ2J8NSPYNWHD1B7GGKVEKD" ;
                AsyncHttpClient client = new AsyncHttpClient();
                client.post(url, new
                        AsyncHttpResponseHandler() {
                            @Override
                            public void onSuccess(int statusCode, Header[] headers, byte[] responseBody) {
                                //mTextView.setText("Ok");
                                if(responseBody != null) {
                                    //JSONObject result = new JSONObject(new String(responseBody));
                                    // String data = result.getString("result") ;
                                    mTextView.setText(new String(responseBody));

                                    //mTextView.setText(new String(responseBody));
                                }

                            }

                            @Override
                            public void onFailure(int statusCode, Header[] headers, byte[] responseBody, Throwable error) {

                            }
                        });*/
                /*String url = "https://api-ropsten.etherscan.io/api?module=proxy&action=eth_call&to=0x6c68955f6FA0Af72393333B10e0a396f86be8898&data=0x1e16f68b0000000000000000000000000000000000000000000000000000000000000000&tag=latest&apikey=K7BEBSHYDRFJJ2J8NSPYNWHD1B7GGKVEKD" ;
                AsyncHttpClient client = new AsyncHttpClient();
                client.get(url, new AsyncHttpResponseHandler() {
                    @Override
                    public void onSuccess(int statusCode, Header[] headers, byte[] responseBody) {
                        if(responseBody != null) {
                            try {
                                JSONObject result = new JSONObject(new String(responseBody));
                                String data = result.getString("result") ;
                                mTextView.setText(data);
                            } catch (JSONException e) {
                                e.printStackTrace();
                            }

                            //mTextView.setText(new String(responseBody));
                        }
                    }

                    @Override
                    public void onFailure(int statusCode, Header[] headers, byte[] responseBody, Throwable error) {

                    }
                });*/


                //String clientVersion = web3ClientVersion.getWeb3ClientVersion();

        }
    }


}
